"""
Django settings for learnsphere project.
Generated by 'django-admin startproject' using Django 5.2.
https://docs.djangoproject.com/en/5.2/topics/settings/
"""

from pathlib import Path
import os
import environ

# ----------------- ENV CONFIG -----------------
BASE_DIR = Path(__file__).resolve().parent.parent
env = environ.Env()
environ.Env.read_env(os.path.join(BASE_DIR, ".env"))

# -------------- SECRET & DEBUG FROM ENV ----------------
SECRET_KEY = env("DJANGO_SECRET_KEY", default="insecure-key-for-dev")
DEBUG = env.bool("DEBUG", default=True)

ALLOWED_HOSTS = env.list("ALLOWED_HOSTS", default=["localhost", "127.0.0.1"])

# ----------------- APPLICATIONS -----------------
INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.sites",  # social login için şart!
    "allauth",
    "allauth.account",
    "allauth.socialaccount",
    "allauth.socialaccount.providers.google",
    "allauth.socialaccount.providers.github",
    "core.apps.CoreConfig",  # sinyal için app
]

SITE_ID = 1

AUTHENTICATION_BACKENDS = [
    "django.contrib.auth.backends.ModelBackend",
    "allauth.account.auth_backends.AuthenticationBackend",
]

LOGIN_REDIRECT_URL = "/"
ACCOUNT_LOGOUT_REDIRECT_URL = "/"
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_EMAIL_VERIFICATION = "optional"
ACCOUNT_USERNAME_REQUIRED = True

# ----------------- SOCIAL LOGIN: GOOGLE & GITHUB -----------------
SOCIALACCOUNT_PROVIDERS = {
    "google": {
        "SCOPE": ["profile", "email"],
        "AUTH_PARAMS": {"access_type": "online"},
        "APP": {
            "client_id": env("GOOGLE_CLIENT_ID", default=""),
            "secret": env("GOOGLE_CLIENT_SECRET", default=""),
            "key": "",
        },
    },
    "github": {
        "SCOPE": ["user", "email"],
        "APP": {
            "client_id": env("GITHUB_CLIENT_ID", default=""),
            "secret": env("GITHUB_CLIENT_SECRET", default=""),
            "key": "",
        },
    },
}

# ----------------- MIDDLEWARE -----------------
MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "allauth.account.middleware.AccountMiddleware",  # <-- EKLE BUNU!
]

ROOT_URLCONF = "learnsphere.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR, "templates")],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                # bizim eklediklerimiz:
                "core.context_processors.notifications",
            ],
        },
    },
]

WSGI_APPLICATION = "learnsphere.wsgi.application"

# ----------------- DATABASE -----------------
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}

# ----------------- PASSWORD VALIDATION -----------------
AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator"
    },
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator"},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator"},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator"},
]

# ----------------- INTERNATIONALIZATION -----------------
LANGUAGE_CODE = "en-us"
TIME_ZONE = "Europe/Istanbul"
USE_I18N = True
USE_TZ = True

# ----------------- STATIC / MEDIA -----------------
STATIC_URL = "/static/"
STATICFILES_DIRS = [os.path.join(BASE_DIR, "static")]
MEDIA_URL = "/media/"
MEDIA_ROOT = os.path.join(BASE_DIR, "media")
STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")


# ----------------- DEFAULT PK FIELD -----------------
DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# ---- File upload limits ----
DATA_UPLOAD_MAX_MEMORY_SIZE = 5 * 1024 * 1024
FILE_UPLOAD_MAX_MEMORY_SIZE = 5 * 1024 * 1024

SOCIALACCOUNT_LOGIN_ON_GET = True


# --------- (OPTIONAL) PRODUCTION-READY TODOs ---------
# - For production, set DEBUG=False in .env
# - Set your real ALLOWED_HOSTS in .env (example: '.onrender.com', 'yourdomain.com')
# - Add secure session/cookie/ssl settings for deployment
# - Set up logging config if needed

# -------- Hugging Face Özetleme Ayarları --------
HF_API_TOKEN = env("HF_API_TOKEN")
HF_SUMMARY_API_URL = env("HF_SUMMARY_API_URL")
HF_EXPLAIN_API_URL = env("HF_EXPLAIN_API_URL")
